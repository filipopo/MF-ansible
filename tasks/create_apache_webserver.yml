---
- name: Install apache and related packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  loop:
    - composer
    - libapache2-mpm-itk
    - php-fpm
    - php-sqlite3
    - php-xml
    - python3-certbot-apache

- name: Create virtual host for the mf website
  ansible.builtin.template:
    src: templates/webserver/vhosts/mobileforces.j2
    dest: /etc/apache2/sites-available/mobileforces.conf
    mode: "644"

- name: Copy website files
  ansible.builtin.copy:
    src: "templates/webserver/website/{{ item }}"
    dest: "{{ website_path }}/"
    owner: "{{ server_user }}"
    group: "{{ server_user }}"
    mode: "644"
  loop:
    - bin
    - config
    - migrations
    - public
    - src
    - templates
    - .env
    - composer.json
    - composer.lock
    - symfony.lock
    - sync_paypal.php

- name: Install website
  ansible.builtin.shell: |
    cd "{{ website_path }}" &&
    export APP_ENV=prod APP_DEBUG=0 &&
    composer install --no-dev --optimize-autoloader --classmap-authoritative &&
    composer dump-env prod && rm -f .env &&
    ADMIN_PASSWORD="{{ AdminPassword }}" php bin/console doctrine:migrations:migrate -n
  become_user: "{{ server_user }}"

- name: Enable the mobileforces website
  ansible.builtin.shell:
    cmd: a2enmod proxy_fcgi speling mpm_event && a2dismod mpm_prefork && a2ensite mobileforces.conf
    creates: /etc/apache2/sites-enabled/mobileforces.conf

- name: Request LE certificate
  ansible.builtin.command:
    cmd: "certbot --apache -n --email {{ ServerAdmin }} --agree-tos --no-redirect -d {{ ServerName }}"
    creates: /etc/apache2/sites-enabled/mobileforces-le-ssl.conf

- name: Get PHP version
  ansible.builtin.shell: readlink -f /usr/bin/php | grep -oP '/usr/bin/php\K.+'
  register: php

- name: Configure PHP fpm pool
  ansible.builtin.replace:
    path: "/etc/php/{{ php.stdout }}/fpm/pool.d/www.conf"
    regexp: "{{ item[0] }}"
    replace: "{{ item[1] }}"
  loop:
    - [= www-data, "= {{ server_user }}"]
    - ["/run/php/php{{ php.stdout }}-fpm.sock", /run/php/www.sock]

- name: Reload the apache and PHP fpm services
  ansible.builtin.service:
    name: "{{ item }}"
    state: reloaded
  loop:
    - apache2
    - "php{{ php.stdout }}-fpm"

- name: Allow the website to restart game services
  ansible.builtin.template:
    src: templates/webserver/scripts/01-mobileforces.j2
    dest: /etc/polkit-1/rules.d/01-mobileforces.rules
    owner: root
    group: root
    mode: "644"

- name: Create cron job for syncing paypal
  ansible.builtin.cron:
    name: Gets transfer fees for donations
    minute: 0
    hour: 4
    user: "{{ server_user }}"
    job: "PAYPAL_CLIENTID={{ paypal_clientid }} PAYPAL_SECRETKEY={{ paypal_secretkey }} php {{ website_path }}/sync_paypal.php"
    cron_file: mobileforces-kofi_sync_paypal

- name: Create cron job for cleaning the site
  ansible.builtin.cron:
    name: Clean the site
    minute: 30
    hour: 4
    weekday: 0
    user: "{{ server_user }}"
    job: "cd {{ website_path }} && rm -rf donation_log.txt var/cache var/log && php bin/console cache:warmup"
    cron_file: mobileforces-clean
