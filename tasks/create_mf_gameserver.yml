---
- name: Get OS version
  ansible.builtin.command: lsb_release -cs
  register: ver

- name: Prepare to install wine
  ansible.builtin.shell:
    cmd: |
      dpkg --add-architecture i386 &&
      curl https://dl.winehq.org/wine-builds/winehq.key | gpg --yes --dearmor -o /etc/apt/keyrings/winehq-archive.key - &&
      wget -NP /etc/apt/sources.list.d/ "https://dl.winehq.org/wine-builds/ubuntu/dists/{{ ver.stdout }}/winehq-{{ ver.stdout }}.sources"
    creates: "/etc/apt/sources.list.d/winehq-{{ ver.stdout }}.sources"

- name: Try installing winehq-stable
  ansible.builtin.package:
    name: winehq-stable
    state: latest
  ignore_errors: yes
  register: stable_install

- name: Fallback to winehq-staging
  ansible.builtin.package:
    name: winehq-staging
    state: latest
  when: stable_install is failed

- name: Extract Mobile Forces zip onto server if the game path doesn't exist
  ansible.builtin.unarchive:
    creates: "{{ game_path }}/"
    src: "{{ mf_path }}"
    dest: "{{ install_path }}/"
    owner: "{{ server_user }}"
    group: "{{ server_user }}"
    mode: "744"

- name: Copy files into the game folder
  ansible.builtin.copy:
    src: "templates/gameserver/scripts/{{ item }}"
    dest: "{{ game_path }}/System/"
    owner: "{{ server_user }}"
    group: "{{ server_user }}"
    mode: "744"
  loop:
    - compress.sh
    - dedicated.sh
    - package.sh

- name: Set admin info
  ansible.builtin.replace:
    path: "{{ game_path }}/System/MobileForces.ini"
    regexp: "{{ item[0] }}=.*"
    replace: "{{ item[0] }}={{ item[1] }}"
  loop:
    - [AdminEmail, "{{ ServerAdmin }}"]
    - [AdminPassword, "{{ AdminPassword }}"]

- name: Create service files for the mf server
  ansible.builtin.template:
    src: "templates/gameserver/services/{{ item[0] }}"
    dest: "/etc/systemd/system/{{ item[1] }}"
    mode: "644"
  loop:
    - [mobileforces.j2, mobileforces.service]
    - [mobileforces-fastdl.j2, mobileforces-fastdl.service]
    - [mobileforces-package.j2, mobileforces-package.service]
  register: service_files

- name: Reload systemctl
  ansible.builtin.command: systemctl daemon-reload
  when: service_files.changed

- name: Create cron job for fastdl
  ansible.builtin.cron:
    name: Compresses files for mobileforces fastdl
    minute: 0
    hour: "*/12"
    user: "{{ server_user }}"
    job: systemctl start mobileforces-fastdl
    cron_file: mobileforces-fastdl

- name: Create cron job for restarting the server
  ansible.builtin.cron:
    name: Restart the server to avoid issues
    minute: 0
    hour: 5
    user: "{{ server_user }}"
    job: systemctl restart mobileforces
    cron_file: mobileforces-restart

- name: Create cron job for packaging the game
  ansible.builtin.cron:
    name: Make zips to update the game
    minute: 30
    hour: 5
    user: "{{ server_user }}"
    job: systemctl start mobileforces-package
    cron_file: mobileforces-zip
